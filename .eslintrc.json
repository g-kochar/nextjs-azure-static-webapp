{
  "extends": ["next/core-web-vitals", "next/typescript"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "projectService": true
  },
  "rules": {
    "@typescript-eslint/array-type": ["error", { "default": "generic", "readonly": "generic" }],

    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-expect-error": "allow-with-description",
        "ts-ignore": "allow-with-description",
        "ts-nocheck": "allow-with-description",
        "ts-check": false,
        "minimumDescriptionLength": 5
      }
    ],

    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true,
        "allowHigherOrderFunctions": true,
        "allowConciseArrowFunctionExpressionsStartingWithVoid": true
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-duplicate-type-constituents": ["warn", { "ignoreUnions": true }],
    "@typescript-eslint/no-empty-function": ["error", { "allow": ["arrowFunctions"] }],
    "@typescript-eslint/no-explicit-any": "off", // TODO: revisit
    "@typescript-eslint/no-namespace": ["error", { "allowDeclarations": true }],
    "@typescript-eslint/no-non-null-assertion": "off",
    "no-throw-literal": "off",
    "@typescript-eslint/only-throw-error": "warn",
    "@typescript-eslint/no-unnecessary-condition": "off",
    "@typescript-eslint/no-unnecessary-type-assertion": "warn",
    "@typescript-eslint/no-unsafe-argument": "warn",
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn",
    "@typescript-eslint/no-unsafe-call": "warn",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "args": "all",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "ignoreRestSiblings": true,
        "varsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "warn",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/prefer-as-const": "error",

    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowNumber": true,
        "allowBoolean": true,
        "allowAny": true,
        "allowNullish": true,
        "allowRegExp": true
      }
    ],

    "camelcase": ["error", { "allow": ["^__UNUSED_"], "ignoreImports": true }],
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
    "no-bitwise": ["error", { "int32Hint": true }],
    "no-console": "error",
    "no-plusplus": ["error", { "allowForLoopAfterthoughts": true }],
    "no-unused-vars": "off",
    "prefer-const": ["error", { "destructuring": "all" }]
  }
}
